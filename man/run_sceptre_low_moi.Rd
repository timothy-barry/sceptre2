% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_interface.R
\name{run_sceptre_low_moi}
\alias{run_sceptre_low_moi}
\title{Run sceptre (low MOI)}
\usage{
run_sceptre_low_moi(
  mm_odm,
  gene_grna_group_pairs,
  form,
  B = 5000,
  gene_modality_name = "gene",
  grna_modality_name = "grna_expression",
  grna_group_column_name = "grna_group",
  n_pairs_to_sample = 50,
  full_output = FALSE
)
}
\arguments{
\item{mm_odm}{a multimodal ondisc matrix containing gene and grna (either expression or assignment) modalities}

\item{gene_grna_group_pairs}{a data frame with columns \code{gene_id} and \code{grna_group} giving the gene ID / grna group pairs to analyze.}

\item{form}{a string that describes how to adjust for the covariates}

\item{B}{number of resamples to draw for permutation/conditional randomization test}

\item{gene_modality_name}{name of the gene modality (e.g., "gene_expression")}

\item{grna_modality_name}{name of the grna modality (e.g., "grna_expression")}

\item{grna_group_column_name}{name of the column within the feature covariate matrix of the gRNA ODM containing the gRNA groups}

\item{n_pairs_to_sample}{number of pairs to sample from \code{response_grna_group_pairs} for debugging purposes}

\item{full_output}{return the full output (TRUE) or a simplified, reduced output (FALSE)?}

\item{threshold}{threshold to use for assigning gRNAs to cells}
}
\value{
a data frame with columns \code{response_id}, \code{grna_group}, and \code{p_value} (as well as other entries).
}
\description{
Runs sceptre on a low MOI dataset.
}
\examples{
\dontrun{
library(ondisc)
# a small example
tap_seq_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "data/schraivogel/ground_truth_tapseq/")
mm_fp <- paste0(tap_seq_dir, "multimodal_metadata.rds")
odm_fps <- paste0(tap_seq_dir, c("gene/matrix.odm", "grna_expression/matrix.odm"))
mm_odm <- ondisc::read_multimodal_odm(odm_fps = odm_fps, multimodal_metadata_fp = mm_fp)
gene_grna_group_pairs <- expand.grid(gene_id = mm_odm |> get_modality("gene") |> get_feature_ids(),
grna_group = mm_odm |> get_modality("grna_expression") |> get_feature_covariates() |> dplyr::pull(target) |> unique())
gene_grna_group_pairs <- gene_grna_group_pairs |> dplyr::filter(grna_group != "non-targeting")
form <- "~ log(gene_n_nonzero) + log(gene_n_umis) + batch"
threshold <- 8; B <- 5000; gene_modality_name <- "gene"; grna_modality_name <- "grna_assignment"; grna_group_column_name <- "target"; n_pairs_to_sample <- 50; full_output <- FALSE; side <- "both"
}
}
